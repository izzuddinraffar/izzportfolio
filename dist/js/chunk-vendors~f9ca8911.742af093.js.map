{"version":3,"sources":["webpack:///./node_modules/register-service-worker/index.js","webpack:///./node_modules/path-browserify/index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","register","swUrl","hooks","registrationOptions","emit","hook","args","len","arguments","length","apply","navigator","addEventListener","checkValidServiceWorker","serviceWorker","ready","then","registration","registerValidSW","waiting","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","fetch","response","status","Error","unregister","headers","get","indexOf","onLine","normalizeArray","parts","allowAboveRoot","up","i","last","splice","unshift","basename","path","start","end","matchedSlash","charCodeAt","slice","filter","xs","f","res","push","exports","resolve","resolvedPath","resolvedAbsolute","process","cwd","TypeError","charAt","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","prototype","call","index","relative","from","to","trim","arr","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","code","hasRoot","ext","extname","startDot","startPart","preDotState","str"],"mappings":"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","file":"js/chunk-vendors~f9ca8911.742af093.js","sourcesContent":["// Register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\nvar isLocalhost = function () { return Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n); }\n\nexport function register (swUrl, hooks) {\n  if ( hooks === void 0 ) hooks = {};\n\n  var registrationOptions = hooks.registrationOptions; if ( registrationOptions === void 0 ) registrationOptions = {};\n  delete hooks.registrationOptions\n\n  var emit = function (hook) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    if (hooks && hooks[hook]) {\n      hooks[hook].apply(hooks, args)\n    }\n  }\n\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', function () {\n      if (isLocalhost()) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, emit, registrationOptions)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, emit, registrationOptions) {\n  navigator.serviceWorker\n    .register(swUrl, registrationOptions)\n    .then(function (registration) {\n      emit('registered', registration)\n      if (registration.waiting) {\n        emit('updated', registration)\n        return\n      }\n      registration.onupdatefound = function () {\n        emit('updatefound', registration)\n        var installingWorker = registration.installing\n        installingWorker.onstatechange = function () {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              emit('updated', registration)\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              emit('cached', registration)\n            }\n          }\n        }\n      }\n    })\n    .catch(function (error) {\n      emit('error', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, emit, registrationOptions) {\n  // Check if the service worker can be found.\n  fetch(swUrl)\n    .then(function (response) {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404) {\n        // No service worker found.\n        emit('error', new Error((\"Service worker not found at \" + swUrl)))\n        unregister()\n      } else if (response.headers.get('content-type').indexOf('javascript') === -1) {\n        emit('error', new Error(\n          \"Expected \" + swUrl + \" to have javascript content-type, \" +\n          \"but received \" + (response.headers.get('content-type'))))\n        unregister()\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, emit, registrationOptions)\n      }\n    })\n    .catch(function (error) {\n      if (!navigator.onLine) {\n        emit('offline')\n      } else {\n        emit('error', error)\n      }\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.unregister()\n    })\n  }\n}\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"],"sourceRoot":""}